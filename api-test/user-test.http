### 테스트에 쓸 데이터
@username = gildong
@password = Abcdefg123!
@name = 홍길동
@email = test@gmail.com
@address = 대전 서구 둔산동


@username1 = momoysm
@password1 = Abcdefg123!
@name1 = 윤성모
@email1 = test@gmail.com
@address1 = 서울

@newPassword=Momosfg123@

@username2 = hyunjiji
@password2 = Abcdefg123!
@name2 = 현지
@email2 = test@gmail.com
@address2 = 서울

###회원가입 -> ok
POST http://localhost:8080/api/users/admin
Content-Type: application/json

{
  "username" : "{{username}}",
  "password" : "{{password}}",
  "name" : "{{name}}",
  "email" : "{{email}}",
  "address" : "{{address}}"
}

###회원가입 -> ok
POST http://localhost:8080/api/users/admin
Content-Type: application/json

{
  "username" : "{{username2}}",
  "password" : "{{password2}}",
  "name" : "{{name2}}",
  "email" : "{{email2}}",
  "address" : "{{address2}}"
}

###회원가입1 -> 됨
POST http://localhost:8080/api/users
Content-Type: application/json

{
  "username" : "{{username1}}",
  "password" : "{{password1}}",
  "name" : "{{name1}}",
  "email" : "{{email1}}",
  "address" : "{{address1}}"
}

###로그인 -> ok
GET http://localhost:8080/api/users/login
Content-Type: application/json

{
  "username" : "{{username1}}",
  "password" : "Momosfg123@"
}

> {%
    client.global.set("Authorization", response.headers.valueOf("Authorization"));
    client.global.set("RefreshToken", response.headers.valueOf("RefreshToken"));
%}

###로그인 -> ok
GET http://localhost:8080/api/users/login
Content-Type: application/json

{
  "username" : "{{username2}}",
  "password" : "Abcdefg123!"
}

> {%
    client.global.set("Authorization", response.headers.valueOf("Authorization"));
    client.global.set("RefreshToken", response.headers.valueOf("RefreshToken"));
%}

### 유저 로그아웃 -> ok
DELETE http://localhost:8080/api/users/logout
Authorization:{{Authorization}}


### 유저 탈퇴 => ok
PATCH http://localhost:8080/api/users/withdraw
Content-Type: application/json
Authorization:{{Authorization}}

{
  "password" : "{{newPassword}}"

}

### 유저 프로필 조회 -> ok
GET http://localhost:8080/api/users/2/profiles
Authorization: {{Authorization}}


### 유저 프로필 수정 -> ok
PATCH http://localhost:8080/api/users/2/profiles
Authorization: {{Authorization}}
Content-Type: application/json

{
  "name" : "존잘윤성모",
  "email" : "momoysmmm@gmail.com",
  "address": "일영맘속어딘가"
}

### 유저 비밀번호 변경(200) -> ok
PUT http://localhost:8080/api/users/update-password
Authorization: {{Authorization}}
Content-Type: application/json

{
  "password": "Abcdefg123!",
  "newPassword": "Momosfg123@"
}

### 유저 비밀번호 변경(새로운 비밀번호와 기존 비밀번호가 동일합니다.) -> ok
PUT http://localhost:8080/api/users/update-password
Authorization: {{Authorization}}
Content-Type: application/json

{
  "password": "Momosfg123@",
  "newPassword": "Momosfg123@"
}

### 유저 비밀번호 변경(현재 비밀번호가 일치하지 않습니다.) -> ok
PUT http://localhost:8080/api/users/update-password
Authorization: {{Authorization}}
Content-Type: application/json

{
  "password": "Abcdefg123!",
  "newPassword": "Momosfg123@"
}

### 유저 비밀번호 변경(새로운 비밀번호는 최근 사용한 비밀번호와 다르게 설정해야 합니다) -> ok
PUT http://localhost:8080/api/users/update-password
Authorization: {{Authorization}}
Content-Type: application/json

{
  "password": "Momosfg123@",
  "newPassword": "Abcdefg123!"
}